11-9-23

- Se continuó con los componentes EditCLientModal y EditEmployeeModal para la edición de los clientes y los monitores.
- Se creó la función en la api para la edición en las tablas correspondientes.
- Se creó en el componente paginaMonitor las funciones para cerrar el modal abierto en caso de descartar los cambios y 
cerrarlo y refrescar la pagina en caso de aplicar los cambios.


12-9-23

- Se creó las funciones en la API para devolver todas las clases de la tabla classes y tambien para devolver todas las clases de un determinado dia.
- Se creó con useEffect dependiente de selectedDate para que hiciera fetch a esa función tanto en la pagina de monitor como en la pagina de usuario.
- Se crearon funciones auxiliares para realizar:
    - Cambio de formato en hora para adaptarlo al fetch
    - Cambio de formato de la hora de la tabla classes para mostrarlo como hora y no como segundos desde media noche.
    - Busqueda del nombre del monitor sacado del array del employeesData usando el employee_id de la tabla Classes. para esto se tuvo que agregar
    en los fetch iniciales de la pagina de usuarios un fetch de todos los empleados. esto no se va a mostrar en pantalla, solamente se usara para
    poder mostrar el nombre del monitor en la lista
- Se agrefaron nuevas clases desde el workbech y se comprobó que tanto la pagina de monitores como la pagina de uisuarios mostraban información correctamente.
- Se agregó el boton de Crear Clase. Se enlazará a la nueva pagina de crear clase.

Pendiente:
x Crear pagina de crear clase. Crear funcion en FastAPI para crear la clase
x Crear función para editar la clase.
- Crear la opción para los clientes de inscribirse a la clase. Crear la función en FastAPI para esto.
- Crear la opción de eliminar a alguien de una clase.
x Borrar clase.

13-09-23

- Se creó la función de fastapi para la creación de las clases.
- Se creó la pagina para la creación de las clases basandose en las paginas de creación de 
uduarios y de monitores.
- Se modificaron los inputs para que fuese mas intiutiva la entrada de datos y que concordara con los de la tabla.

** Se debe cambiar el formato en el que se envia la hora. no se debe enviar en segunddos sino en HH:mm:setSelectedDate
** Se debe revisar los problemas al conectar con el servidor de mysql a la hora de hacer un post en la tabla clases. Problema solo pasa en la tabal clases
ya que se probó creando un cliente nuevo y dijo INSERT funcionó correctamente. Probar eliminar la tabla y crearla de nuevo.

14-09-23

- Se solucionó el problema que se tenía a la hora de crear clases.
- Se crearon las funciones de FastApi para obtener una clase segun su id, para eliminar una clase y para editar una clase.
- Para la eliminación de una clase se usó el mismo método que para la eliminación de un cliente y de un monitor. Se agregaron las categorias
correspondientes a las funciones de borrar.
- Para la edición de una clase se usó un método diferente a las demas y fue la de usar el código de la pagina de creación de clases.
Para esto, se agregaron nuevos params a router en el caso de editar. En la página de editar se buscan estos params y, de estar el param edit a true,
se hace un fetch con el numero de clase (tambien param), se le asigna al fromData. Ademas de esto, se cambia el boton de crear a editar y se cambia
el summit de post a put usando la función de editar.
- Se agregó la funcionalidad en la página de usuario de, cuando se oprima una clase realice una tarea. En este momento es solo un alert, pero se ampliará
para realizar una petición a la API de crear una nueva entrada a la tabla de asistencias.
