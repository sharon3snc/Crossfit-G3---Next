import Head from 'next/head'
import Logo from '../images/Logo.png'
import Image from 'next/image'
import Manos from '../images/manos.jpg'
import styles2 from '@/styles/CrearUsuario.module.css'
import { useState, useEffect } from 'react'
import axios from 'axios';
import { useRouter } from 'next/router';

export default function CrearUsuarioInfo() {
    const router = useRouter();
    const { employee_id } = router.query;
    const { edit } = router.query;
    const { edit_client_id } = router.query;

    const initialFormData = {
        name: '',
        surname: '',
        email: '',
        birthdate: '',
        inscription_date: '',
        phone: '',
        emergency_contact: '',
        emergency_phone: '',
        rate_id: '',
        password: '',
        password2: '',
        available_classes: 10
    }
    const [formData, setFormData] = useState({
        name: '',
        surname: '',
        email: '',
        birthdate: '',
        inscription_date: '',
        phone: '',
        emergency_contact: '',
        emergency_phone: '',
        rate_id: '',
        password: '',
        password2: '',
        available_classes: 10
    });

    useEffect(() => {
        if (edit) {
            console.log(edit_client_id)
            const fetchClientData = async () => {
                try {
                    const response = await axios.get(`http://127.0.0.1:8000/clients/${edit_client_id}`);
                    setFormData({
                        name: response.data.client.name,
                        surname: response.data.client.surname,
                        email: response.data.client.email,
                        birthdate: response.data.client.birthdate,
                        inscription_date: response.data.client.inscription_date,
                        phone: response.data.client.phone,
                        emergency_contact: response.data.client.emergency_contact,
                        emergency_phone: response.data.client.emergency_phone,
                        rate_id: response.data.client.rate_id,
                        password: response.data.client.password,
                        password2: response.data.client.password,
                        available_classes: response.data.client.available_classes
                    });
                    console.log(response.data.client)
                } catch (error) {
                }
            };
            fetchClientData();
        }

    }, [employee_id]);

    const handleEvent = (e) => {
        const currentDate = new Date().toISOString().split('T')[0];
        if (edit) {
            setFormData({
                ...formData,
                [e.target.name]: e.target.value,
            });
        } else {
            setFormData({
                ...formData,
                [e.target.name]: e.target.value,
                inscription_date: currentDate
            });
        }
    }

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (edit) {
            try {
                const response = await axios.put(`http://localhost:8000/clients/${edit_client_id}`, formData);
                console.log(response.data); // Assuming the API returns the created client data
                setFormData(initialFormData);
                alert('Cliente editado correctamente')
            } catch (error) {
                console.error(error);
            }

        } else {
            try {
                const response = await axios.post('http://localhost:8000/clients', formData);
                console.log(response.data); // Assuming the API returns the created client data
                setFormData(initialFormData);
                alert('Cliente creado correctamente')
            } catch (error) {
                console.error(error);
            }
        }

        setFormData(initialFormData)
        router.push(`/paginaMonitor?employee_id=${employee_id}`)
    }

    const handleSubmit2 = async (e) => {
        console.log(formData)
        e.preventDefault();
    }
    const passwordMatch = formData.password === formData.password2;

    return (
        <>
            <Head>
                <title>Crear Usuario</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={styles2.backgroundContainer}>
                <Image src={Manos} alt="manos" className={styles2.imagenFondo} />
                <div className={styles2.backgroundCanvas}>
                    <div className={styles2.propContainer}>
                        <h2 className={styles2.formTitle}>Datos de Usuario</h2>
                        <form className={styles2.formContainer} onSubmit={handleSubmit}>

                            <div className={styles2.formContainerInfo}>

                                <input
                                    className={styles2.formInput}
                                    name='name'
                                    type="text"
                                    placeholder='Nombre'
                                    value={formData.name}
                                    onChange={handleEvent}
                                    required
                                />

                                <input
                                    className={styles2.formInput}
                                    name='surname'
                                    type="text"
                                    placeholder='Apellidos'
                                    value={formData.surname}
                                    onChange={handleEvent}
                                    required
                                />

                                <input
                                    className={styles2.formInput}
                                    name='email'
                                    type="text"
                                    placeholder='Email'
                                    value={formData.email}
                                    onChange={handleEvent}
                                    required
                                />

                                <input
                                    className={styles2.formInput}
                                    name='birthdate'
                                    type="text"
                                    placeholder='Fecha de Nacimiento'
                                    value={formData.birthdate}
                                    onChange={handleEvent}
                                    required
                                    pattern='^(19|20)\d\d-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[01])$'
                                />

                                <input
                                    className={styles2.formInput}
                                    name='phone'
                                    type="text"
                                    placeholder='Teléfono'
                                    value={formData.phone}
                                    onChange={handleEvent}
                                    required
                                />

                                <input
                                    className={styles2.formInput}
                                    name='emergency_contact'
                                    type="text"
                                    placeholder='Contacto de Emergencia'
                                    value={formData.emergency_contact}
                                    onChange={handleEvent}
                                    required
                                />

                                <input
                                    className={styles2.formInput}
                                    name='emergency_phone'
                                    type="text"
                                    placeholder='Teléfono de Emergencia'
                                    value={formData.emergency_phone}
                                    onChange={handleEvent}
                                    required
                                />
                                <input
                                    className={styles2.formInput}
                                    name='rate_id'
                                    type="text"
                                    placeholder='Tarifa'
                                    value={formData.rate_id}
                                    onChange={handleEvent}
                                    required
                                />
                            </div>
                            <div className={styles2.passwordContainer}>
                                <input
                                    className={styles2.formInput}
                                    name="password"
                                    type="password"
                                    placeholder='Contraseña'
                                    value={formData.password}
                                    onChange={handleEvent}
                                    required
                                />
                                <input
                                    className={styles2.formInput}
                                    name="password2"
                                    type="password"
                                    placeholder='Repetir contraseña'
                                    value={formData.password2}
                                    onChange={handleEvent}
                                    required
                                />
                            </div>
                            <button
                                className={styles2.redRoundButton}
                                type="submit"
                                disabled={!passwordMatch}
                            >{edit ? 'Editar Cliente' : 'Crear Cliente'}
                            </button>
                        </form>
                    </div>
                </div>
            </div>


        </>
    )
}

